<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,0,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Foreground" Value="Black"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#200F53"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="20" Margin="0" VerticalAlignment="Center" Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="0,0,0,1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="0" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                            <Border x:Name="Background" BorderBrush="#FFE8EDF9" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                            <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="3,6,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="20"/>
                            <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" 
                                               Focusable="{TemplateBinding Focusable}" 
                                               HorizontalContentAlignment="Stretch" 
                                               Grid.Row="0" VerticalContentAlignment="Stretch" Background="Transparent" BorderThickness="0,0,0,1" BorderBrush="Black" Margin="0,6,0,0">
                                <DatePickerTextBox.Template>
                                    <ControlTemplate TargetType="DatePickerTextBox">
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                            <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Border x:Name="ContentElement" BorderBrush="#FFE8EDF9" BorderThickness="1"/>
                                                <Border x:Name="watermark_decorator" BorderBrush="#FFE8EDF9" BorderThickness="1">
                                                    <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                                </Border>
                                                <ScrollViewer x:Name="PART_ContentHost" Background="{TemplateBinding Background}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </DatePickerTextBox.Template>
                            </DatePickerTextBox>
                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                             Path=ViewModel.IsDirty}" Value="true">
                            <Setter Property="Background" Value="LightYellow"/>
                            <Setter TargetName="PART_TextBox" Property="Background" Value="LightYellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                             Path=ViewModel.IsInvalid}" Value="true">
                            <Setter Property="BorderBrush" Value="Red"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="menuButtonTextAcount" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0,18,0,0"/>
    </Style>
    
    <Style x:Key="menuButtonAccount" TargetType="RadioButton">
        <!--Normal button style-->
        <Setter Property="Background" Value="{StaticResource coloraccount}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border CornerRadius="6" Background="{TemplateBinding Background}"
                            >
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Background" Value="{StaticResource colorAction}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Padding" Value="10"/>

                <Setter Property="Background" Value="{StaticResource colorAction}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor1}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="menuButtonAccount" TargetType="RadioButton">
        
        <Setter Property="Background" Value="{StaticResource coloraccount}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border CornerRadius="6" Background="{TemplateBinding Background}"
                            >
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Background" Value="{StaticResource colorAction}"/>
            <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
            <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
        </Trigger>
        <Trigger Property="IsChecked" Value="True">
                <Setter Property="Padding" Value="10"/>

                <Setter Property="Background" Value="{StaticResource colorAction}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor1}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    
    <Style x:Key="menuButtonIconAccount" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{StaticResource color5}"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>

        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>

        </Style.Triggers>
    </Style>
    <!--Menu button icon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>
    <!--Icon button-->
    <Style x:Key="iconButton" TargetType="Button">
        <!--Normal button style-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal button style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5,0,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="4,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="menuLick" TargetType="RadioButton">
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0,0,0,0"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--Activated button style-->
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Opacity" Value="0.4"></Setter>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Opacity" Value="1"></Setter>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Menu button icon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="35,0,20,5"/>
    </Style>

    <!--Menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--Menu button icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>
    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="#707db2"></Setter>
        <Setter Property="Margin" Value="10 0 10 5"></Setter>
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Tag" Value="#6673b7"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="4" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#bccaf1"></Setter>
                <Setter Property="Tag" Value="#7071f0"></Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#c4c0ff" Offset="0"></GradientStop>
                            <GradientStop Color="White" Offset="3"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="4" BorderBrush="#a5a1f5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="MenuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="40"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Margin" Value="0 0 0 0"></Setter>
        <Setter Property="Foreground" Value="#ffffff"/>

    </Style>


    <Style x:Key="MenuButtonText" TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Margin" Value="30 0 0 0"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Background" Value="Transparent">
            <!--<Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#edf8f8" Offset="0"></GradientStop>
                    <GradientStop Color="#edf8f8" Offset="3"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>-->
        </Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border CornerRadius="3" x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#6D2FFF" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#6D2FFF" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>


    <Style x:Key="MenuButtonActive" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#a4abdf" Offset="0"></GradientStop>
                    <GradientStop Color="#495385" Offset="3"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#bccaf1"></Setter>
        <Setter Property="Margin" Value="10 0 10 5"></Setter>
        <Setter Property="Height" Value="50"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Tag" Value="#7071f0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="4" BorderBrush="#a5a1f5">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#bccaf1"></Setter>
                <Setter Property="Tag" Value="#7071f0"></Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#dadbe7" Offset="0"></GradientStop>
                            <GradientStop Color="#495385" Offset="3"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="4" BorderBrush="#a5a1f5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MenuButtonActiveSearch" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#31407b" Offset="0"></GradientStop>
                    <GradientStop Color="#495385" Offset="3"></GradientStop>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#bccaf1"></Setter>
        <Setter Property="Margin" Value="0 0 0 5"></Setter>
        <Setter Property="Height" Value="45"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Tag" Value="#7071f0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0,20,20,5" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#bccaf1"></Setter>
                <Setter Property="Tag" Value="#7071f0"></Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="red" Offset="0"></GradientStop>
                            <GradientStop Color="#f1922c" Offset="3"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="0,20,20,5" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TopMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{StaticResource color3}"></Setter>
        <Setter Property="Margin" Value="5 0 0 0"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Width" Value="80"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Tag" Value="#6673b7"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5b60c4"></Setter>
                <Setter Property="Foreground" Value="#ffffff"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BottomMenuButton" TargetType="Button">
        <Setter Property="Background" Value="#773DFF"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Margin" Value="5 0 0 0"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Width" Value="100"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Tag" Value="#6673b7"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5b60c4"></Setter>
                <Setter Property="Foreground" Value="#ffffff"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonBorder" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5b60c4"></Setter>
                <Setter Property="Foreground" Value="#f0f2f5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BieuDoText" TargetType="TextBlock">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="FontSize" Value="40"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Margin" Value="30"></Setter>
    </Style>

    <Style x:Key="BackgroupTextBox" TargetType="TextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#bccaf1"></Setter>
                <Setter Property="Tag" Value="#7071f0"></Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#31407b" Offset="0"></GradientStop>
                            <GradientStop Color="#495385" Offset="3"></GradientStop>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#a5a1f5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="Menu_SubMenu_Template"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
                CornerRadius="15"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                Height="30"
                Width="80">

            <Grid>

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="2"
                                  TextBlock.Foreground="{StaticResource color3}"
                                  TextBlock.FontFamily="Fonts/#Roboto Light"
                                  TextBlock.FontSize="12"
                                  HorizontalAlignment="Center"
                                  RecognizesAccessKey="True"
                                  Margin="3,0,0,0"
                                  VerticalAlignment="Center" />

                <!--// Right Arrow Icon //-->

                

                <!--// Popup //-->

                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Focusable="false"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       Margin="0,10,0,0"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="6" >

                    <Border x:Name="SubMenuBorder"
                            Background="#24105F"
                            BorderBrush="#24105F">

                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                            <Grid RenderOptions.ClearTypeHint="Enabled">

                                <Canvas HorizontalAlignment="Left"
                                        VerticalAlignment="Top" />

                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="true"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>

            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
            </Trigger>

          
            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#5b60c4" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#5b60c4" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Menu_Template"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
                Background="#5b60c4"
                BorderBrush="#5b60c4"
                BorderThickness="0"
                Height="30"
                Width="80"
                >

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22"
                                      Width="Auto" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <!--// Icon //-->

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Left"
                                  Height="35"
                                  Width="35"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center" />

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="2"
                                  TextBlock.Foreground="#FFFFFF"
                                  TextBlock.FontFamily="Fonts/#Roboto Light"
                                  TextBlock.FontSize="12"
                                  HorizontalAlignment="Center"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />

            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#6D2FFF" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#6D2FFF" />
            </Trigger>


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--// Menu Item Template //-->
    <ControlTemplate x:Key="Menu_Template1"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
                Background="Transparent"
                BorderBrush="Transparent"
                Height="50"
                Width="250"
                Margin="-5,0,0,5"
                >

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22"
                                      Width="Auto" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <!--// Icon //-->

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Left"
                                  Height="22"
                                  Width="22"
                                  Margin="40,0,10,0"
                                  VerticalAlignment="Center" />

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header" x:Name="text"
                                  Grid.Column="2"
                                  TextBlock.Foreground="#7376BD"
                                  TextBlock.FontFamily="Fonts/#Roboto Light"
                                  TextBlock.FontSize="13.5"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />

            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="4,0,0,0"></Setter>
                <Setter Property="Margin" TargetName="border" Value="0,0,0,5"/>
                <Setter Property="TextBlock.Foreground" TargetName="border" Value="white"></Setter>
                <Setter Property="Background" TargetName="border" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFC047"/>

            </Trigger>

            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource panelOverColor}" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{StaticResource panelOverColor}" />
                <Setter Property="TextBlock.Foreground" TargetName="text" Value="white"></Setter>
                <Setter Property="BorderThickness" TargetName="border" Value="4,0,0,0"></Setter>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFC047"/>
            </Trigger> 


        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Menu_SubMenu_Template1"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
                Background="Transparent"
                BorderBrush="Transparent"
                Height="50"
                Width="250"
                Margin="-5,0,0,5">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22"
                                      Width="Auto" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <!--// Icon //-->

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Left"
                                  Height="22"
                                  Width="22"
                                  Margin="40,0,10,0"
                                  VerticalAlignment="Center" />

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header" x:Name="text"
                                  Grid.Column="2"
                                  TextBlock.Foreground="#7376BD"
                                  TextBlock.FontFamily="Fonts/#Roboto Light"
                                  TextBlock.FontSize="13.5"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />

                <!--// Right Arrow Icon //-->

                <!--<fa:IconImage Icon="ArrowCircleRight"
                       Stretch="None"
                       Grid.Column="4"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center" />-->

                <!--// Popup //-->

                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Focusable="false"
                       HorizontalOffset="-2"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="0">

                    <Border x:Name="SubMenuBorder"
                            Background="#2E333A"
                            BorderBrush="#2E333A">

                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                            <Grid RenderOptions.ClearTypeHint="Enabled">

                                <Canvas HorizontalAlignment="Left"
                                        VerticalAlignment="Top" />

                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="true"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>

            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
            </Trigger>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderThickness" TargetName="border" Value="4,0,0,0"></Setter>
                <Setter Property="Margin" TargetName="border" Value="0,0,0,5"/>
                <Setter Property="TextBlock.Foreground" TargetName="text" Value="White"/>
                <Setter Property="Background" TargetName="border" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFC047"/>

            </Trigger>
           
            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="{StaticResource panelOverColor}" />
                <Setter Property="BorderThickness" TargetName="border" Value="4,0,0,0"></Setter>
                <Setter Property="TextBlock.Foreground" TargetName="border" Value="white"></Setter>
                <Setter Property="BorderThickness" TargetName="border" Value="4,0,0,0"></Setter>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFC047"/>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Menu_SubMenu_Template2"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border" CornerRadius="4"
                Background="#ecf4f4"
                BorderBrush="Black"
                BorderThickness="1"
                Height="25"
                Width="120"
                Margin="-5,0,0,5">

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="0"
                                      Width="Auto" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="4" />
                </Grid.ColumnDefinitions>

                <!--// Icon //-->

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Left"
                                  Height="20"
                                  Width="20"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center" />

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header" x:Name="text"
                                  Grid.Column="2"
                                  TextBlock.Foreground="Black"
                                  TextBlock.FontFamily="Fonts/#Roboto Light"
                                  TextBlock.FontSize="12"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />

                <!--// Right Arrow Icon //-->

                <fa:IconImage Icon="AngleDown" Foreground="Black"
                                              Height="10" 
                               HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                              Grid.Column="4"
                              Style="{StaticResource iconButtonIcon}" Margin="0,0,2,0"/>

                <!--// Popup //-->

                <Popup x:Name="PART_Popup"
                       AllowsTransparency="true"
                       Focusable="false"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       VerticalOffset="6">

                    <Border x:Name="SubMenuBorder"
                            Background="#2E333A"
                            BorderBrush="#2E333A">

                        <ScrollViewer x:Name="SubMenuScrollViewer"
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">

                            <Grid RenderOptions.ClearTypeHint="Enabled">

                                <Canvas HorizontalAlignment="Left"
                                        VerticalAlignment="Top" />

                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                Grid.IsSharedSizeScope="true"
                                                KeyboardNavigation.TabNavigation="Cycle" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>

            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter Property="PopupAnimation"
                        TargetName="PART_Popup"
                        Value="None" />
            </Trigger>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>


            

            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#47d6b5" />
                <Setter Property="BorderThickness" TargetName="border" Value="4,0,0,0"></Setter>
                <Setter Property="TextBlock.Foreground" TargetName="border" Value="white"></Setter>
               
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Item_combo"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
                Background="#ecf4f4"
                BorderBrush="Black"
                BorderThickness="1"
                Height="30"
                Width="160"
               >

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="0"
                                      Width="Auto" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--// Icon //-->

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Center"
                                  Height="20"
                                  Width="20"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center" />

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="2"
                                  TextBlock.Foreground="Black"
                                  TextBlock.FontFamily="Fonts/#Roboto Light"
                                  TextBlock.FontSize="12"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />


            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#a6c2c2" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#a6c2c2" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Item_Template1"
                     TargetType="{x:Type MenuItem}">

        <Border x:Name="border"
                Background="#281560"
                BorderBrush="#281560"
                BorderThickness="{TemplateBinding BorderThickness}"
                Height="50"
                Width="230"
               >

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22"
                                      Width="Auto" />
                    <ColumnDefinition Width="13" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>

                <!--// Icon //-->

                <ContentPresenter x:Name="Icon"
                                  ContentSource="Icon"
                                  HorizontalAlignment="Center"
                                  Height="22"
                                  Width="22"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center" />

                <!--// Menu Text //-->

                <ContentPresenter ContentSource="Header"
                                  Grid.Column="2"
                                  TextBlock.Foreground="White"
                                  TextBlock.FontFamily="Fonts/#Roboto Light"
                                  TextBlock.FontSize="13.5"
                                  HorizontalAlignment="Left"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center" />


            </Grid>
        </Border>


        <ControlTemplate.Triggers>

            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Visibility"
                        TargetName="Icon"
                        Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter Property="Background"
                        TargetName="border"
                        Value="#2B1372" />
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="#2B1372" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border CornerRadius="6" x:Name="Border" BorderBrush="Gray" BorderThickness="1">
                            <Grid>
                                <ToggleButton Background="Transparent" BorderThickness="0"
                                                Name="ToggleButton"
                                                ClickMode="Press"
                                                Focusable="false"
                                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                            />
                                <ContentPresenter
                                                x:Name="ContentSite"
                                                IsHitTestVisible="False"
                                                Margin="3,0,0,0"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Left"
                                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            />
                                <TextBox
                                                x:Name="PART_EditableTextBox"
                                                Visibility="Hidden"
                                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                                Background="Transparent"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Focusable="True"
                                                BorderBrush="Transparent"
                                                Style="{x:Null}"
                                                TextWrapping="NoWrap"
                                                AcceptsReturn="False"
                                                Padding="6,0,0,0"
                                                TabIndex="2" Margin="4,0,0,0"
                                            />
                                <Popup
                                                Name="Popup"
                                                Placement="Bottom"
                                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                                AllowsTransparency="True"
                                                Focusable="False"
                                                PopupAnimation="Slide"
                                            >
                                    <Grid
                                                    Name="DropDown"
                                                    SnapsToDevicePixels="True"
                                                    MinWidth="{TemplateBinding ActualWidth}"
                                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                    Background="White"
                                                >
                                        <Border
                                                        x:Name="DropDownBorder"
                                                        Background="White"
                                                        BorderThickness="1"
                                                        BorderBrush="Gray"
                                                    >
                                            <ScrollViewer
                                                            Margin="4,6,4,6"
                                                            SnapsToDevicePixels="True"
                                                            HorizontalScrollBarVisibility="Auto"
                                                            VerticalScrollBarVisibility="Auto"
                                                        >
                                                <StackPanel IsItemsHost="True" />
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="IsSelected" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border x:Name="Border" Background="Transparent" Padding="2">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
  
    </ResourceDictionary>